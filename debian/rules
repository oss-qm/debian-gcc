#! /usr/bin/make -f

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

# version number of the defaults package
VDEF	:= $(strip $(shell dpkg-parsechangelog | awk -F: '/^Version:/ {print $$NF}'))

VMAJOR	:= $(shell echo $(VDEF) | awk -F. '{print $$1}')
VMINOR	:= $(shell echo $(VDEF) | awk -F. '{print $$2}' | sed -e 's/\([0-9]*\).*/\1/')
REL_EXT	:= $(shell echo $(VDEF) | sed -e 's/^$(VMAJOR)\.$(VMINOR)//')

# gcc-defaults 0.8 is the first version for 2.95.4.
REL_NO_295	:= $(shell expr $(VMINOR) + 15)$(REL_EXT)
# gcc-defaults 0.6 is the first version with 2.96 support.
REL_NO_296	:= $(shell expr $(VMINOR) + 17)$(REL_EXT)
# gcc-defaults 0.17 is the first version with 3.0.4 support.
REL_NO_30	:= $(shell expr $(VMINOR) + 6)$(REL_EXT)
# gcc-defaults 1.0 is the first version with 3.1 support.
REL_NO_31	:= $(shell expr $(VMINOR) + 1)$(REL_EXT)
# gcc-defaults 1.2 is the first version with 3.2 support.
REL_NO_32	:= $(shell expr $(VMINOR) - 1)$(REL_EXT)
# gcc-defaults 1.3 is the first version with 3.2.2 support.
REL_NO_322	:= $(shell expr $(VMINOR) - 3)$(REL_EXT)
# gcc-defaults 1.4 is the first version with 3.2.3 support.
REL_NO_323	:= $(shell expr $(VMINOR) - 4)$(REL_EXT)
# gcc-defaults 1.5 is the first version with 3.3 support.
REL_NO_33	:= $(shell expr $(VMINOR) - 5)$(REL_EXT)
# gcc-defaults 1.7 is the first version with 3.3.1 support.
REL_NO_331	:= $(shell expr $(VMINOR) - 7)$(REL_EXT)
# gcc-defaults 1.10 is the first version with 3.3.2 support.
REL_NO_332	:= $(shell expr $(VMINOR) - 9)$(REL_EXT)
# gcc-defaults 1.13 is the first version with 3.3.3 support.
REL_NO_333	:= $(shell expr $(VMINOR) - 12)$(REL_EXT)
# gcc-defaults 1.16 is the first version with 3.3.4 support.
REL_NO_334	:= $(shell expr $(VMINOR) - 15)$(REL_EXT)
# gcc-defaults 1.19 is the first version with 3.3.5 support.
REL_NO_335	:= $(shell expr $(VMINOR) - 18)$(REL_EXT)
# gcc-defaults 1.22 is the first version with 3.3.6 support.
REL_NO_336     := $(shell expr $(VMINOR) - 21)$(REL_EXT)

# gcc-defaults 1.22 is the first version with 3.4.3 support.
REL_NO_343	:= $(shell expr $(VMINOR) - 21)$(REL_EXT)
# gcc-defaults 1.23 is the first version with 3.4.4 support.
REL_NO_344	:= $(shell expr $(VMINOR) - 23)$(REL_EXT)
# gcc-defaults 1.30 is the first version with 3.4.5 support.
REL_NO_345	:= $(shell expr $(VMINOR) - 29)$(REL_EXT)
# gcc-defaults 1.32 is the first version with 3.4.5 support.
REL_NO_346	:= $(shell expr $(VMINOR) - 31)$(REL_EXT)

# gcc-defaults 1.23 is the first version with 4.0.0 support.
REL_NO_400	:= $(shell expr $(VMINOR) - 22)$(REL_EXT)
# gcc-defaults 1.26 is the first version with 4.0.1 support.
REL_NO_401	:= $(shell expr $(VMINOR) - 25)$(REL_EXT)
# gcc-defaults 1.29 is the first version with 4.0.2 support.
REL_NO_402	:= $(shell expr $(VMINOR) - 28)$(REL_EXT)
# gcc-defaults 1.32 is the first version with 4.0.3 support.
REL_NO_403	:= $(shell expr $(VMINOR) - 31)$(REL_EXT)

# gcc-defaults 1.33 is the first version with 4.1.0 support.
REL_NO_410	:= $(shell expr $(VMINOR) - 33)$(REL_EXT)
# gcc-defaults 1.36 is the first version with 4.1.1 support.
REL_NO_411	:= $(shell expr $(VMINOR) - 35)$(REL_EXT)
# gcc-defaults 1.51 is the first version with 4.1.2 support.
REL_NO_412	:= $(shell expr $(VMINOR) - 50)$(REL_EXT)

# gcc-defaults 1.54 is the first version with 4.2.0 support.
REL_NO_420	:= $(shell expr $(VMINOR) - 54)$(REL_EXT)
# gcc-defaults 1.56 is the first version with 4.2.0 support.
REL_NO_421	:= $(shell expr $(VMINOR) - 55)$(REL_EXT)
# gcc-defaults 1.62 is the first version with 4.2.0 support.
REL_NO_422	:= $(shell expr $(VMINOR) - 61)$(REL_EXT)

GPC_VERSION	:= 2.1

# minimum required gcc-X.Y versions
REQV_295	:= (>= 1:2.95.4-16)
REQV_296	:= 
REQV_30		:= (>= 1:3.0.4-12)
REQV_32		:= (>= 1:3.2.3-1)
REQV_33		:= (>= 1:3.3.6-1)
REQV_GPC_33	:= (>= 1:3.3.6.$(GPC_DATE)-1)
REQV_34		:= (>= 3.4.6-1)
REQV_40		:= (>= 4.0.3-1)
REQV_41		:= (>= 4.1.2-1)
REQV_41_GCJ	:= (>= 4.1.2-1)
REQV_41_GPC	:= (>= $(GPC_VERSION)-4.1.2-16)
REQV_42		:= (>= 4.2.2-3)
REQV_42_GCJ	:= (>= 4.2.2-3)

REQV_LIBGCJ_BC	:= (>= 4.2.2-1)

# architecture dependent variables
DEB_HOST_ARCH		:= $(shell dpkg-architecture -qDEB_HOST_ARCH)
DEB_HOST_GNU_TYPE	:= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)

# CV_XXX is the complete version number, including the release, without epoch
CV_CHILL:= 2.95.4-$(REL_NO_295)
CV_GPC	:= 3.4.6-$(REL_NO_346)

CV_CPP		:= 4.2.2-$(REL_NO_422)
CV_GCC		:= 4.2.2-$(REL_NO_422)
CV_GPP		:= 4.2.2-$(REL_NO_422)
CV_GOBJC	:= 4.2.2-$(REL_NO_422)
CV_GOBJCXX	:= 4.2.2-$(REL_NO_422)
CV_G77		:= 3.4.6-$(REL_NO_346)
CV_GFORT	:= 4.2.2-$(REL_NO_422)
CV_GCJ		:= 4.2.2-$(REL_NO_422)
CV_GIJ		:= 4.2.2-$(REL_NO_422)
CV_LIBGCJBC	:= 4.2.2-$(REL_NO_422)
CV_GNAT		:= 4.1.2-$(REL_NO_412)
CV_GPC		:= $(GPC_VERSION)-4.1.2-$(REL_NO_412)
CV_LIBGCJCOMMON	:= 1:4.2.2-$(REL_NO_422)

REQV_CHILL	= $(REQV_295)
REQV_GPC	= $(REQV_34)

REQV_CPP	= $(REQV_42)
REQV_GCC	= $(REQV_42)
REQV_GPP	= $(REQV_42)
REQV_GOBJC	= $(REQV_42)
REQV_GOBJCXX	= $(REQV_42)
REQV_G77	= $(REQV_34)
REQV_GFORT	= $(REQV_42)
REQV_GCJ	= $(REQV_42_GCJ)
REQV_GIJ	= $(REQV_42_GCJ)
REQV_GPC	= $(REQV_41_GPC)

EPOCH=4
EPOCH_GPC=5
OS_NAME	:= Linux
distribution := $(shell lsb_release -is)
all_packages	:= gnat g++ g77 gfortran gcj gobjc gobjc++ gpc
no_packages	:= chill

LIBGCJ		= libgcj8-1
LIBGCJ_PC	= libgcj8.pc
LIBGCJ_SONAME	= 81

ifneq ($(distribution)-$(DEB_HOST_ARCH),Debian-amd64)
  lib32         = usr/lib32
else
  lib32         = emul/ia32-linux/usr/lib
endif

gcj_archs = alpha amd64 hppa i386 ia64 lpia m68k mips mipsel powerpc ppc64 s390 sparc
gcj_native_archs = alpha amd64 i386 ia64 lpia mips mipsel powerpc ppc64 s390 sparc
multilib_archs = amd64 i386 kfreebsd-amd64 powerpc ppc64 s390 sparc

ifneq (,$(filter $(DEB_HOST_ARCH), $(multilib_archs)))
  with_multilib = yes
endif

with_gfdl_docs := no
ifeq ($(distribution),Ubuntu)
  with_gfdl_docs := yes
endif

ifeq ($(DEB_HOST_ARCH),alpha)
    CV_GCJ_HACKED	:= 4.1.2-$(REL_NO_412)
    CV_GIJ_HACKED	:= 4.1.2-$(REL_NO_412)
    REQV_LIBGCJ_BC	:= (>= 4.1.2-3)
    REQV_GCJ	= $(REQV_41)
    REQV_GIJ	= $(REQV_41)
    LIBGCJ		= libgcj7-1
    LIBGCJ_PC	= libgcj7.pc
    LIBGCJ_SONAME	= 71
endif

ifeq ($(DEB_HOST_ARCH),amd64)
endif

ifeq ($(DEB_HOST_ARCH),arm)
    no_packages += gnat
endif

ifeq ($(DEB_HOST_ARCH),armel)
    no_packages += gnat g77 g77-doc
    CV_GOBJC		:= 4.1.2-$(REL_NO_412)
    CV_GOBJCXX		:= 4.1.2-$(REL_NO_412)
    REQV_GOBJC		= $(REQV_41)
    REQV_GOBJCXX	= $(REQV_41)
endif

ifeq ($(DEB_HOST_ARCH),hppa)
endif

ifeq ($(DEB_HOST_ARCH),i386)
endif

ifeq ($(DEB_HOST_ARCH),hurd-i386)
    OS_NAME	:= Hurd
    no_packages += gnat gcj gij libgcj-bc
endif

ifeq ($(DEB_HOST_ARCH),ia64)
endif

ifeq ($(DEB_HOST_ARCH),kfreebsd-i386)
    OS_NAME	:= kFreeBSD
endif

ifeq ($(DEB_HOST_ARCH),lpia)
	CV_GNAT		:= 4.2.1-$(REL_NO_421)
	CV_GNAT_HACKED	:= 4.1.2-$(REL_NO_412)
endif

ifeq ($(DEB_HOST_ARCH),kfreebsd-amd64)
    OS_NAME	:= kFreeBSD
    no_packages += gnat
endif

ifeq ($(DEB_HOST_ARCH),m32r)
    no_packages += gnat
endif

ifeq ($(DEB_HOST_ARCH),m68k)
    no_packages += gnat
endif

ifeq ($(DEB_HOST_ARCH),mips)
endif

ifeq ($(DEB_HOST_ARCH),mipsel)
endif

ifeq ($(DEB_HOST_ARCH),netbsd-i386)
    OS_NAME	:= NetBSD
    no_packages += gnat
endif

ifeq ($(DEB_HOST_ARCH),powerpc)
endif

ifeq ($(DEB_HOST_ARCH),s390)
endif

tmp:=$(filter $(DEB_HOST_ARCH),sh3-linux sh4-linux sh3eb-linux sh4eb-linux)
ifeq ($(DEB_HOST_ARCH),$(tmp))
    no_packages += gnat g77 gfortran gcj gpc
endif

ifeq ($(DEB_HOST_ARCH),sparc)
endif

ifneq (,$(findstring gnat, $(no_packages)))
    no_packages += gnat-doc
endif

ifneq ($(with_gfdl_docs),yes)
    no_packages := $(sort $(no_packages) gnat-doc cpp-doc gcc-doc gfortran-doc g77-doc)
endif

packages := $(filter-out $(no_packages), $(all_packages))

# derived version number (without release)
V_CPP	:= $(shell echo $(CV_CPP)   | sed 's/-[^-]*$$//')
V_GCC	:= $(shell echo $(CV_GCC)   | sed 's/-[^-]*$$//')
V_GNAT	:= $(shell echo $(CV_GNAT)  | sed 's/-[^-]*$$//')
ifneq (,$(CV_GNAT_HACKED))
  V_GNAT	:= $(shell echo $(CV_GNAT_HACKED)  | sed 's/-[^-]*$$//')
endif
V_GPP	:= $(shell echo $(CV_GPP)   | sed 's/-[^-]*$$//')
V_GOBJC	:= $(shell echo $(CV_GOBJC) | sed 's/-[^-]*$$//')
V_GOBJCXX	:= $(shell echo $(CV_GOBJCXX) | sed 's/-[^-]*$$//')
V_G77	:= $(shell echo $(CV_G77)   | sed 's/-[^-]*$$//')
V_GFORT	:= $(shell echo $(CV_GFORT) | sed 's/-[^-]*$$//')
V_CHILL	:= $(shell echo $(CV_CHILL) | sed 's/-[^-]*$$//')
V_GCJ	:= $(shell echo $(CV_GCJ)   | sed 's/-[^-]*$$//')
V_GIJ	:= $(shell echo $(CV_GIJ)   | sed 's/-[^-]*$$//')
ifneq (,$(CV_GCJ_HACKED))
  V_GCJ	:= $(shell echo $(CV_GCJ_HACKED)   | sed 's/-[^-]*$$//')
  V_GIJ	:= $(shell echo $(CV_GIJ_HACKED)   | sed 's/-[^-]*$$//')
endif
V_GPC	:= $(shell echo $(CV_GPC)   | sed 's/$(GPC_VERSION)-//;s/-[^-]*$$//')

# number for the package name
PV_CPP	:= $(shell echo $(V_CPP)   | awk -F. '{printf "%d.%d", $$1, $$2}')
PV_GCC	:= $(shell echo $(V_GCC)   | awk -F. '{printf "%d.%d", $$1, $$2}')
PV_GNAT	:= $(shell echo $(V_GNAT)  | awk -F. '{printf "%d.%d", $$1, $$2}')
PV_GPP	:= $(shell echo $(V_GPP)   | awk -F. '{printf "%d.%d", $$1, $$2}')
PV_GOBJC:= $(shell echo $(V_GOBJC) | awk -F. '{printf "%d.%d", $$1, $$2}')
PV_GOBJCXX:= $(shell echo $(V_GOBJCXX) | awk -F. '{printf "%d.%d", $$1, $$2}')
PV_G77	:= $(shell echo $(V_G77)   | awk -F. '{printf "%d.%d", $$1, $$2}')
PV_GFORT:= $(shell echo $(V_GFORT) | awk -F. '{printf "%d.%d", $$1, $$2}')
PV_CHILL:= $(shell echo $(V_CHILL) | awk -F. '{printf "%d.%d", $$1, $$2}')
PV_GCJ	:= $(shell echo $(V_GCJ)   | awk -F. '{printf "%d.%d", $$1, $$2}')
PV_GIJ	:= $(shell echo $(V_GIJ)   | awk -F. '{printf "%d.%d", $$1, $$2}')
PV_GPC	:= $(shell echo $(V_GPC)   | awk -F. '{printf "%d.%d", $$1, $$2}')

README:
	m4 -DPACKAGES="$(packages)" \
	   -DOS_NAME=$(OS_NAME) \
	   -DDEB_ARCH=$(DEB_HOST_ARCH) \
	   -DV_CPP=$(V_CPP)     -DPV_CPP=$(PV_CPP) \
	   -DV_GCC=$(V_GCC)     -DPV_GCC=$(PV_GCC) \
	   -DV_GPP=$(V_GPP)     -DPV_GPP=$(PV_GPP) \
	   -DV_GOBJC=$(V_GOBJC) -DPV_GOBJC=$(PV_GOBJC) \
	   -DV_GOBJCXX=$(V_GOBJCXX) -DPV_GOBJCXX=$(PV_GOBJCXX) \
	   -DV_CHILL=$(V_CHILL) -DPV_CHILL=$(PV_CHILL) \
	   -DV_G77=$(V_G77)     -DPV_G77=$(PV_G77) \
	   -DV_GFORT=$(V_GFORT) -DPV_GFORT=$(PV_GFORT) \
	   -DV_GCJ=$(V_GCJ)     -DPV_GCJ=$(PV_GCJ) \
	   -DV_GIJ=$(V_GIJ)     -DPV_GIJ=$(PV_GIJ) \
	   -DV_GPC=$(V_GPC)     -DPV_GPC=$(PV_GPC) \
	   $(if $(filter yes,$(with_gfdl_docs)), -DGFDL) \
		debian/README.Debian.m4 > debian/README.Debian.tmp2
	uniq debian/README.Debian.tmp2 > debian/README.Debian.tmp
	rm -f debian/README.Debian.tmp2
	[ -e debian/README.Debian ] \
	  && cmp -s debian/README.Debian debian/README.Debian.tmp \
	  && rm -f debian/README.Debian.tmp && exit 0; \
	  mv debian/README.Debian.tmp debian/README.Debian

substvars:
	( \
	  echo 'version:cpp=$(EPOCH):$(CV_CPP)'; \
	  echo 'version:gcc=$(EPOCH):$(CV_GCC)'; \
	  echo 'version:gpp=$(EPOCH):$(CV_GPP)'; \
	  echo 'version:gobjc=$(EPOCH):$(CV_GOBJC)'; \
	  echo 'version:gij=$(EPOCH):$(CV_GIJ)'; \
	  echo 'version:gcj=$(EPOCH):$(CV_GCJ)'; \
	  echo 'version:gpc=$(EPOCH_GPC):$(CV_GPC)'; \
	  echo 'version:g77=$(EPOCH):$(CV_G77)'; \
	  echo 'version:gfort=$(EPOCH):$(CV_GFORT)'; \
	  echo 'version:libgcjcommon=$(CV_LIBGCJCOMMON)'; \
	  echo 'pv:cpp=$(PV_CPP)'; \
	  echo 'pv:gcc=$(PV_GCC)'; \
	  echo 'pv:gpp=$(PV_GPP)'; \
	  echo 'pv:gobjc=$(PV_GOBJC)'; \
	  echo 'pv:gobjcxx=$(PV_GOBJCXX)'; \
	  echo 'pv:chill=$(PV_CHILL)'; \
	  echo 'pv:g77=$(PV_G77)'; \
	  echo 'pv:gfort=$(PV_GFORT)'; \
	  echo 'pv:gcj=$(PV_GCJ)'; \
	  echo 'pv:gij=$(PV_GIJ)'; \
	  echo 'pv:gpc=$(PV_GPC)'; \
	  echo 'pv:gnat=$(PV_GNAT)'; \
	  echo 'reqv:cpp=$(REQV_CPP)'; \
	  echo 'reqv:gcc=$(REQV_GCC)'; \
	  echo 'reqv:gpp=$(REQV_GPP)'; \
	  echo 'reqv:gobjc=$(REQV_GOBJC)'; \
	  echo 'reqv:gobjcxx=$(REQV_GOBJCXX)'; \
	  echo 'reqv:chill=$(REQV_CHILL)'; \
	  echo 'reqv:g77=$(REQV_G77)'; \
	  echo 'reqv:gfort=$(REQV_GFORT)'; \
	  echo 'reqv:gcj=$(REQV_GCJ)'; \
	  echo 'reqv:gij=$(REQV_GIJ)'; \
	  echo 'reqv:gpc=$(REQV_GPC)'; \
	  echo 'reqv:gnat=$(REQV_GNAT)'; \
	  echo 'pkg:libgcj=$(LIBGCJ)'; \
	  echo 'pkg:libgcjawt=$(LIBGCJ)-awt'; \
	  echo 'version:libgcjbc=$(CV_LIBGCJBC)'; \
	) > debian/substvars.local
ifeq ($(with_multilib),yes)
	( \
	  echo 'pkgmulti:gcc=gcc-multilib'; \
	  echo 'pkgmulti:gpp=g++-multilib'; \
	  echo 'pkgmulti:gobjc=gobjc-multilib'; \
	  echo 'pkgmulti:gobjcxx=gobjc++-multilib'; \
	  echo 'pkgmulti:gfort=gfortran-multilib'; \
	) >> debian/substvars.local
endif

build: README build-stamp
build-stamp:
	dh_testdir
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp
	rm -f debian/control.tmp*
	rm -f debian/substvars.local
	rm -f debian/lib*gcj-bc.shlibs
	rm -f debian/gcc.postinst debian/g++.postinst
	rm -f debian/g77.postinst debian/gfortran.postinst
	dh_clean

install: build substvars
	dh_testdir
	dh_testroot
	dh_clean -k

	for p in `dh_listpackages`; do \
	  cp -l debian/substvars.local debian/$$p.substvars; \
	done

	: # cpp
	dh_installdirs -pcpp \
		lib usr/bin \
		usr/share/man/man1 usr/share/man/man7 usr/share/doc/cpp
	dh_link -pcpp \
	  /usr/bin/cpp-$(PV_CPP) /usr/bin/cpp \
	  /usr/bin/cpp-$(PV_CPP) /usr/bin/$(DEB_HOST_GNU_TYPE)-cpp

  ifeq ($(with_gfdl_docs),yes)
	for i in gfdl.7 gpl.7 fsf-funding.7; do \
	  cp -p $$i debian/cpp/usr/share/man/man7/$${i}gcc; \
	done
	dh_link -pcpp \
	  /usr/share/man/man1/cpp-$(PV_CPP).1.gz /usr/share/man/man1/cpp.1.gz \
	  /usr/share/man/man1/cpp-$(PV_CPP).1.gz /usr/share/man/man1/$(DEB_HOST_GNU_TYPE)-cpp.1.gz

	: # cpp-doc
	dh_installdirs -pcpp-doc \
		usr/share/doc usr/share/info
	dh_link -pcpp-doc \
	  /usr/share/doc/cpp-$(PV_CPP)-doc /usr/share/doc/cpp-doc \
	  /usr/share/info/cpp-$(PV_CPP).info.gz /usr/share/info/cpp.info.gz \
	  /usr/share/info/cppinternals-$(PV_CPP).info.gz /usr/share/info/cppinternals.info.gz
  endif

	: # gcc
	dh_installdirs -pgcc usr/bin usr/share/man/man1 usr/share/doc
	dh_link -pgcc \
	  /usr/share/doc/cpp /usr/share/doc/gcc \
	  /usr/bin/gcc-$(PV_GCC) /usr/bin/gcc \
	  /usr/bin/gcc-$(PV_GCC) /usr/bin/$(DEB_HOST_GNU_TYPE)-gcc \
	  /usr/bin/gcov-$(PV_GCC) /usr/bin/gcov \
	  /usr/share/doc/gcc-$(PV_GCC)/FAQ.gz /usr/share/doc/cpp/FAQ.gz \
	  /usr/share/doc/gcc-$(PV_GCC)/README.Bugs /usr/share/doc/cpp/README.Bugs
ifeq ($(DEB_HOST_ARCH),sparc)
	rm -f debian/gcc/usr/bin/gcc
	$(CC) -DGCC_NAME=gcc-$(PV_GCC) -O2 -Wall sparc-gcc.c -o debian/gcc/usr/bin/gcc
	mkdir -p debian/gcc/etc
	cp -p debian/disable_64_gcc debian/gcc/etc/.
endif
	install -m 755 -p c89 debian/gcc/usr/bin/c89-gcc
	install -m 644 -p c89.1 debian/gcc/usr/share/man/man1/c89-gcc.1
	install -m 755 -p c99 debian/gcc/usr/bin/c99-gcc
	install -m 644 -p c99.1 debian/gcc/usr/share/man/man1/c99-gcc.1
	sed 's/@VER@/$(PV_GCC)/g' c99.1 > debian/gcc/usr/share/man/man1/c99-gcc.1

	sed -e 's/@GFDL@/$(if $(filter-out yes,$(with_gfdl_docs)),\#)/g' \
		debian/gcc.postinst.in > debian/gcc.postinst

  ifeq ($(with_gfdl_docs),yes)
	dh_link -pgcc \
	  /usr/share/man/man1/gcc-$(PV_GCC).1.gz /usr/share/man/man1/gcc.1.gz \
	  /usr/share/man/man1/gcc-$(PV_GCC).1.gz /usr/share/man/man1/$(DEB_HOST_GNU_TYPE)-gcc.1.gz \
	  /usr/share/man/man1/gcov-$(PV_GCC).1.gz /usr/share/man/man1/gcov.1.gz 

	: # gcc-doc
	dh_installdirs -pgcc-doc \
		usr/share/doc usr/share/info
	dh_link -pgcc-doc \
	  /usr/share/doc/gcc-$(PV_GCC)-doc /usr/share/doc/gcc-doc \
	  /usr/share/info/gcc-$(PV_GCC).info.gz /usr/share/info/gcc.info.gz \
	  /usr/share/info/gccint-$(PV_GCC).info.gz /usr/share/info/gccint.info.gz
  endif

	: # gnat
ifneq (,$(findstring gnat,$(packages)))
	dh_installdirs -pgnat usr/share/doc
	dh_link -pgnat \
	   /usr/bin/gcc-$(PV_GNAT) /usr/bin/gnatgcc

  ifeq ($(with_gfdl_docs),yes)
	dh_link -pgnat \
	   /usr/share/man/man1/gcc-$(PV_GNAT).1.gz /usr/share/man/man1/gnatgcc.1.gz

	: # gnat-doc
	dh_installdirs -pgnat-doc \
		usr/share/doc usr/share/info
	dh_link -pgnat-doc \
	  /usr/share/info/gnat_ugn_unw-$(PV_GNAT).info.gz /usr/share/info/gnat_ugn_unw.info.gz \
	  /usr/share/info/gnat_rm-$(PV_GNAT).info.gz /usr/share/info/gnat_rm.info.gz \
	  /usr/share/info/gnat_style-$(PV_GNAT).info.gz /usr/share/info/gnat_style.info.gz
  endif
endif

ifneq (,$(filter gobjc, $(packages)))
	: # gobjc
	dh_installdirs -pgobjc usr/share/doc
	dh_link -pgobjc \
	  /usr/share/doc/cpp /usr/share/doc/gobjc
endif

ifneq (,$(filter gobjc++, $(packages)))
	: # gobjc++
	dh_installdirs -pgobjc++ usr/share/doc
	dh_link -pgobjc++ \
	  /usr/share/doc/cpp /usr/share/doc/gobjc++
endif

ifneq (,$(filter g++, $(packages)))
	: # g++
	dh_installdirs -pg++ usr/bin /usr/share/man/man1 usr/share/doc
	dh_link -pg++ \
	  /usr/share/doc/cpp /usr/share/doc/g++ \
	  /usr/bin/g++-$(PV_GPP) /usr/bin/g++ \
	  /usr/bin/g++-$(PV_GPP) /usr/bin/$(DEB_HOST_GNU_TYPE)-g++
  ifeq ($(DEB_HOST_ARCH),sparc)
	rm -f debian/g++/usr/bin/g++
	$(CC) -DGPP_NAME=g++-$(PV_GPP) -O2 -Wall sparc-g++.c -o debian/g++/usr/bin/g++
  endif
  ifeq ($(with_gfdl_docs),yes)
	dh_link -pg++ \
	  /usr/share/man/man1/g++-$(PV_GPP).1.gz /usr/share/man/man1/g++.1.gz \
	  /usr/share/man/man1/g++-$(PV_GPP).1.gz /usr/share/man/man1/$(DEB_HOST_GNU_TYPE)-g++.1.gz
  endif
	sed -e 's/@GFDL@/$(if $(filter-out yes,$(with_gfdl_docs)),\#)/g' \
		debian/g++.postinst.in > debian/g++.postinst
endif

ifneq (,$(filter g77, $(packages)))
	: # g77
	dh_installdirs -pg77 usr/bin /usr/share/man/man1 usr/share/doc
	dh_link -pg77 \
	  /usr/share/doc/cpp /usr/share/doc/g77 \
	  /usr/bin/g77-$(PV_G77) /usr/bin/g77 \
	  /usr/bin/g77-$(PV_G77) /usr/bin/$(DEB_HOST_GNU_TYPE)-g77

  ifeq ($(with_gfdl_docs),yes)
	dh_link -pg77 \
	  /usr/share/man/man1/g77-$(PV_G77).1.gz /usr/share/man/man1/g77.1.gz \
	  /usr/share/man/man1/g77-$(PV_G77).1.gz /usr/share/man/man1/$(DEB_HOST_GNU_TYPE)-g77.1.gz

	: # g77-doc
	dh_installdirs -pg77-doc \
		usr/share/doc usr/share/info
	dh_link -pg77-doc \
	  /usr/share/doc/g77-$(PV_G77)-doc /usr/share/doc/g77-doc \
	  /usr/share/info/g77-$(PV_G77).info.gz /usr/share/info/g77.info.gz
  endif
	sed -e 's/@GFDL@/$(if $(filter-out yes,$(with_gfdl_docs)),\#)/g' \
		debian/g77.postinst.in > debian/g77.postinst
endif

ifneq (,$(filter gfortran, $(packages)))
	: # gfortran
	dh_installdirs -pgfortran usr/bin /usr/share/man/man1 usr/share/doc
	dh_link -pgfortran \
	  /usr/share/doc/cpp /usr/share/doc/gfortran \
	  /usr/bin/gfortran-$(PV_GFORT) /usr/bin/gfortran \
	  /usr/bin/gfortran-$(PV_GFORT) /usr/bin/$(DEB_HOST_GNU_TYPE)-gfortran

  ifeq ($(with_gfdl_docs),yes)
	dh_link -pgfortran \
	  /usr/share/man/man1/gfortran-$(PV_GFORT).1.gz /usr/share/man/man1/gfortran.1.gz \
	  /usr/share/man/man1/gfortran-$(PV_GFORT).1.gz /usr/share/man/man1/$(DEB_HOST_GNU_TYPE)-gfortran.1.gz

	: # gfortran-doc
	dh_installdirs -pgfortran-doc \
		usr/share/doc usr/share/info
	dh_link -pgfortran-doc \
	  /usr/share/doc/gfortran-$(PV_GFORT)-doc /usr/share/doc/gfortran-doc \
	  /usr/share/info/gfortran-$(PV_GFORT).info.gz /usr/share/info/gfortran.info.gz
  endif
	sed -e 's/@GFDL@/$(if $(filter-out yes,$(with_gfdl_docs)),\#)/g' \
		debian/gfortran.postinst.in > debian/gfortran.postinst
endif

ifeq (chill, $(findstring chill, $(packages)))
	: # chill
	dh_installdirs -pchill usr/bin /usr/share/man/man1 usr/share/doc
	dh_link -pchill \
	  /usr/share/doc/cpp /usr/share/doc/chill \
	  /usr/bin/chill-$(PV_CHILL) /usr/bin/chill
	dh_undocumented -pchill chill.1
endif

ifneq (,$(filter gcj, $(packages)))
	: # gij
	dh_installdirs -pgij usr/bin /usr/share/man/man1 usr/share/doc
	dh_link -pgij \
	  /usr/share/doc/libgcj-bc /usr/share/doc/gij \
	  /usr/bin/gij-$(PV_GIJ) /usr/bin/gij \
	  /usr/bin/gcj-dbtool-$(PV_GIJ) /usr/bin/gcj-dbtool \
	  /usr/bin/gkeytool-$(PV_GIJ) /usr/bin/gkeytool \
	  /usr/bin/gorbd-$(PV_GIJ) /usr/bin/gorbd \
	  /usr/bin/grmid-$(PV_GIJ) /usr/bin/grmid \
	  /usr/bin/grmiregistry-$(PV_GIJ) /usr/bin/grmiregistry \
	  /usr/bin/gserialver-$(PV_GIJ) /usr/bin/gserialver \

	: # gcj
	dh_installdirs -pgcj usr/bin /usr/share/man/man1 usr/share/doc
	dh_link -pgcj \
	  /usr/share/doc/cpp /usr/share/doc/gcj \
	  /usr/bin/gjavah-$(PV_GCJ) /usr/bin/gjavah \
	  /usr/bin/gcj-$(PV_GCJ) /usr/bin/gcj \
	  /usr/bin/gcj-$(PV_GCJ) /usr/bin/$(DEB_HOST_GNU_TYPE)-gcj \
	  /usr/bin/gcjh-$(PV_GCJ) /usr/bin/gcjh \
	  /usr/bin/gjar-$(PV_GCJ) /usr/bin/gjar \
	  /usr/bin/gjarsigner-$(PV_GCJ) /usr/bin/gjarsigner \
	  /usr/bin/grmic-$(PV_GCJ) /usr/bin/grmic \
	  /usr/bin/jv-convert-$(PV_GCJ) /usr/bin/jv-convert \
	  /usr/bin/jv-scan-$(PV_GCJ) /usr/bin/jv-scan \
	  /usr/bin/jcf-dump-$(PV_GCJ) /usr/bin/jcf-dump \
	  /usr/bin/gcj-wrapper-$(PV_GCJ) /usr/bin/gcj-wrapper \
	  /usr/bin/gtnameserv-$(PV_GCJ) /usr/bin/gtnameserv \
	  /usr/share/java/libgcj-$(PV_GCJ).jar /usr/share/java/libgcj.jar \
	  /usr/lib/pkgconfig/$(LIBGCJ_PC) /usr/lib/pkgconfig/libgcj.pc

	dh_link -pgij \
	  /usr/share/man/man1/gkeytool-$(PV_GIJ).1.gz /usr/share/man/man1/gkeytool.1.gz \
	  /usr/share/man/man1/gorbd-$(PV_GIJ).1.gz /usr/share/man/man1/gorbd.1.gz \
	  /usr/share/man/man1/grmid-$(PV_GIJ).1.gz /usr/share/man/man1/grmid.1.gz \
	  /usr/share/man/man1/grmiregistry-$(PV_GIJ).1.gz /usr/share/man/man1/grmiregistry.1.gz \
	  /usr/share/man/man1/gserialver-$(PV_GIJ).1.gz /usr/share/man/man1/gserialver.1.gz

	dh_link -pgcj \
	  /usr/share/man/man1/gjar-$(PV_GCJ).1.gz /usr/share/man/man1/gjar.1.gz \
	  /usr/share/man/man1/gjarsigner-$(PV_GCJ).1.gz /usr/share/man/man1/gjarsigner.1.gz \
	  /usr/share/man/man1/gjavah-$(PV_GCJ).1.gz /usr/share/man/man1/gjavah.1.gz \
	  /usr/share/man/man1/gnative2ascii-$(PV_GIJ).1.gz /usr/share/man/man1/gnative2ascii.1.gz \
	  /usr/share/man/man1/grmic-$(PV_GIJ).1.gz /usr/share/man/man1/grmic.1.gz \
	  /usr/share/man/man1/gtnameserv-$(PV_GCJ).1.gz /usr/share/man/man1/gtnameserv.1.gz

ifneq ($(REQV_GCJ),$(REQV_41))
	dh_link -pgcj \
	  /usr/bin/gc-analyze-$(PV_GCJ) /usr/bin/gc-analyze \
	  /usr/share/man/man1/gc-analyze-$(PV_GCJ).1.gz /usr/share/man/man1/gc-analyze.1.gz
endif

  ifeq ($(with_gfdl_docs),yes)
	dh_link -pgij \
	  /usr/share/man/man1/gij-$(PV_GIJ).1.gz /usr/share/man/man1/gij.1.gz \
	  /usr/share/man/man1/gcj-dbtool-$(PV_GIJ).1.gz /usr/share/man/man1/gcj-dbtool.1.gz
	dh_link -pgcj \
	  /usr/share/man/man1/gcj-$(PV_GCJ).1.gz /usr/share/man/man1/gcj.1.gz \
	  /usr/share/man/man1/gcj-$(PV_GCJ).1.gz /usr/share/man/man1/$(DEB_HOST_GNU_TYPE)-gcj.1.gz \
	  /usr/share/man/man1/gcjh-$(PV_GCJ).1.gz /usr/share/man/man1/gcjh.1.gz \
	  /usr/share/man/man1/jv-convert-$(PV_GCJ).1.gz /usr/share/man/man1/jv-convert.1.gz \
	  /usr/share/man/man1/jcf-dump-$(PV_GCJ).1.gz /usr/share/man/man1/jcf-dump.1.gz \
	  /usr/share/man/man1/gcj-wrapper-$(PV_GCJ).1.gz /usr/share/man/man1/gcj-wrapper.1.gz \
	  /usr/share/info/gcj-$(PV_GCJ).info.gz /usr/share/info/gcj.info.gz
  endif

	: # libgcj-bc
	dh_installdirs -plibgcj-bc \
		usr/lib usr/share/doc usr/share/lintian/overrides
	ln -s libgcj.so.$(LIBGCJ_SONAME) \
		debian/libgcj-bc/usr/lib/libgcj_bc.so.1

	mkdir -p debian/libgcj-bc/usr/share/lintian/overrides
	cp -p debian/libgcj-bc.overrides \
		debian/libgcj-bc/usr/share/lintian/overrides/libgcj-bc

	echo "libgcj_bc 1 libgcj-bc $(REQV_LIBGCJ_BC)" \
		> debian/libgcj-bc.shlibs
#	echo "libgcj_bc 1 libgcj-bc" > debian/libgcj-bc.shlibs

endif

	: # libgcj-common
	dh_installdirs -plibgcj-common \
	  /usr/bin \
	  /usr/sbin \
	  /etc/java/security/security.d \
	  /usr/lib/security \
	  /var/lib/security \
	  /usr/share/gcj
	install -m644 classpath.security debian/libgcj-common/etc/java/security/
	dh_link -plibgcj-common \
	  /var/lib/security/classpath.security /usr/lib/security/classpath.security
	install -m755 debian/rebuild-gcj-db \
		debian/libgcj-common/usr/bin/
	install -m755 debian/rebuild-security-providers \
		debian/libgcj-common/usr/sbin/
	( \
	  echo "# architectures with gcj support"; \
	  echo "gcj_archs = $(gcj_archs)"; \
	  echo "# architectures which should provide gcj native support"; \
	  echo "gcj_native_archs = $(gcj_native_archs)" \
	) > debian/libgcj-common/usr/share/gcj/debian_defaults

	: # GNU security provider
	for i in \
	  1000-gnu.java.security.provider.Gnu \
	  1001-gnu.javax.crypto.jce.GnuCrypto \
	  1002-gnu.javax.crypto.jce.GnuSasl \
	  1003-gnu.javax.net.ssl.provider.Jessie \
	  1004-gnu.javax.security.auth.callback.GnuCallbacks; \
	do \
	  touch debian/libgcj-common/etc/java/security/security.d/$$i; \
	done

ifneq (,$(filter gpc, $(packages)))
	: # gpc
	dh_installdirs -pgpc usr/bin /usr/share/man/man1 usr/share/doc
	dh_link -pgpc \
	  /usr/share/doc/cpp /usr/share/doc/gpc \
	  /usr/bin/gpc-$(PV_GPC) /usr/bin/gpc \
	  /usr/share/man/man1/gpc-$(PV_GPC).1.gz /usr/share/man/man1/gpc.1.gz \
	  /usr/bin/gpc-run-$(PV_GPC) /usr/bin/gpc-run \
	  /usr/share/man/man1/gpc-run-$(PV_GPC).1.gz /usr/share/man/man1/gpc-run.1.gz \
	  /usr/bin/binobj-$(PV_GPC) /usr/bin/binobj \
	  /usr/share/man/man1/binobj-$(PV_GPC).1.gz /usr/share/man/man1/binobj.1.gz \
	  /usr/bin/gpidump-$(PV_GPC) /usr/bin/gpidump \
	  /usr/share/man/man1/gpidump-$(PV_GPC).1.gz /usr/share/man/man1/gpidump.1.gz

	: # gpc-doc
	dh_installdirs -pgpc-doc \
		usr/share/doc usr/share/info
	dh_link -pgpc-doc \
	  /usr/share/doc/gpc-$(PV_GPC)-doc /usr/share/doc/gpc-doc \
	  /usr/share/info/gpc-$(PV_GPC).info.gz /usr/share/info/gpc.info.gz \
	  /usr/share/info/gpcs-$(PV_GPC).info.gz /usr/share/info/gpcs.info.gz \
	  /usr/share/info/gpcs-de-$(PV_GPC).info.gz /usr/share/info/gpcs-de.info.gz \
	  /usr/share/info/gpcs-hu-$(PV_GPC).info.gz /usr/share/info/gpcs-hu.info.gz
endif

nopkgs :=-s $(foreach p, $(no_packages),-N$(p))

binary-indep: build install
# nothing needs to be done

foo:
	dh_testdir
	dh_testroot
	dh_installdocs -i
	dh_installchangelogs -i
	dh_compress -i
	dh_fixperms -i
	dh_installdeb -i
	dh_gencontrol -plibgcj-common -u-v1:$(CV_LIBGCJBC)
	dh_md5sums -i
	dh_builddeb -i

binary-arch: build install
	dh_testdir
	dh_testroot
#	dh_installdebconf
	dh_installdocs -pcpp -plibgcj-common
	for p in `dh_listpackages $(nopkgs) -Ncpp -Nlibgcj-bc -Nlib32gcj-bc -Ncpp-doc -Ngcc-doc -Ngpc-doc -Ng77-doc -Ngfortran-doc -Ngnat-doc -Nlibgcj-common`; do \
	  echo ln -sf cpp debian/$$p/usr/share/doc/$$p; \
	  mkdir -p debian/$$p/usr/share/doc; \
	  rm -f debian/$$p/usr/share/doc/$$p; \
	  ln -sf cpp debian/$$p/usr/share/doc/$$p; \
	done
	mkdir -p debian/libgcj-bc/usr/share/doc
	ln -sf libgcj-common debian/libgcj-bc/usr/share/doc/libgcj-bc
  ifeq ($(DEB_HOST_ARCH),amd64)
	mkdir -p debian/lib32gcj-bc/usr/share/doc
	ln -sf libgcj-common debian/lib32gcj-bc/usr/share/doc/lib32gcj-bc
  endif

	dh_installchangelogs -pcpp -plibgcj-common
	mv debian/cpp/usr/share/doc/cpp/changelog \
		debian/cpp/usr/share/doc/cpp/changelog.Debian
	mv debian/libgcj-common/usr/share/doc/libgcj-common/changelog \
		debian/libgcj-common/usr/share/doc/libgcj-common/changelog.Debian
	dh_compress $(nopkgs)
	dh_fixperms $(nopkgs)
	dh_installdeb $(nopkgs)
	dh_gencontrol -pcpp     -u-v$(EPOCH):$(CV_CPP)
	dh_gencontrol -pgcc     -u-v$(EPOCH):$(CV_GCC)
  ifeq ($(with_multilib),yes)
	dh_gencontrol -pgcc-multilib -u-v$(EPOCH):$(CV_GCC)
  endif
  ifeq ($(with_gfdl_docs),yes)
	dh_gencontrol -pcpp-doc -u-v$(EPOCH):$(CV_CPP)
	dh_gencontrol -pgcc-doc -u-v$(EPOCH):$(CV_GCC)
  endif
ifneq (,$(filter gnat, $(packages)))
	dh_gencontrol -pgnat -u-v$(CV_GNAT)
  ifeq ($(with_gfdl_docs),yes)
	dh_gencontrol -pgnat-doc -u-v$(CV_GNAT)
  endif
endif
ifneq (,$(filter g++, $(packages)))
	dh_gencontrol -pg++     -u-v$(EPOCH):$(CV_GPP)
  ifeq ($(with_multilib),yes)
	dh_gencontrol -pg++-multilib -u-v$(EPOCH):$(CV_GPP)
  endif
endif
ifneq (,$(filter gobjc, $(packages)))
	dh_gencontrol -pgobjc   -u-v$(EPOCH):$(CV_GOBJC)
  ifeq ($(with_multilib),yes)
	dh_gencontrol -pgobjc-multilib -u-v$(EPOCH):$(CV_GOBJC)
  endif
endif
ifneq (,$(filter gobjc++, $(packages)))
	dh_gencontrol -pgobjc++   -u-v$(EPOCH):$(CV_GOBJCXX)
  ifeq ($(with_multilib),yes)
	dh_gencontrol -pgobjc++-multilib -u-v$(EPOCH):$(CV_GOBJCXX)
  endif
endif
ifneq (,$(filter g77, $(packages)))
	dh_gencontrol -pg77     -u-v$(EPOCH):$(CV_G77)
  ifeq ($(with_gfdl_docs),yes)
	dh_gencontrol -pg77-doc -u-v$(EPOCH):$(CV_G77)
  endif
endif
ifneq (,$(filter gfortran, $(packages)))
	dh_gencontrol -pgfortran     -u-v$(EPOCH):$(CV_GFORT)
  ifeq ($(with_multilib),yes)
	dh_gencontrol -pgfortran-multilib -u-v$(EPOCH):$(CV_GFORT)
  endif
  ifeq ($(with_gfdl_docs),yes)
	dh_gencontrol -pgfortran-doc -u-v$(EPOCH):$(CV_GFORT)
  endif
endif
ifneq (,$(filter gpc, $(packages)))
	dh_gencontrol -pgpc     -u-v$(EPOCH_GPC):$(CV_GPC)
	dh_gencontrol -pgpc-doc -u-v$(EPOCH_GPC):$(CV_GPC)
endif
ifneq (,$(filter gcj, $(packages)))
	dh_gencontrol -pgcj         -u-v$(EPOCH):$(CV_GCJ)
	dh_gencontrol -pgij         -u-v$(EPOCH):$(CV_GIJ)
	dh_gencontrol -plibgcj-bc   -u-v$(CV_LIBGCJBC)
endif
	dh_gencontrol -plibgcj-common -u-v$(CV_LIBGCJCOMMON)
ifneq (,$(filter chill, $(packages)))
	dh_gencontrol -pchill -u-v$(EPOCH):$(CV_CHILL)
endif
	dh_md5sums $(nopkgs)
	dh_builddeb $(nopkgs)

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install
